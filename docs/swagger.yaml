basePath: /
definitions:
  ent.User:
    properties:
      id:
        description: ID of the ent.
        type: string
      password:
        description: Password holds the value of the "password" field.
        type: string
      username:
        description: Username holds the value of the "username" field.
        type: string
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:8080
info:
  contact: {}
  description: Pio game rewrtitten as api
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Pio game api
  version: "1.0"
paths:
  /users/:
    get:
      description: returns list of all users in database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.User'
            type: array
      summary: returns list of users
      tags:
      - users
  /users/{id}:
    delete:
      description: Deletes user of a given id
      parameters:
      - description: id of user
        in: path
        name: id
        required: true
        type: integer
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Deletes user
      tags:
      - users
    get:
      description: returns user with given id
      parameters:
      - description: id of user
        in: path
        name: id
        required: true
        type: integer
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: returns user
      tags:
      - users
    patch:
      consumes:
      - application/json
      description: updates user
      parameters:
      - description: user data
        in: formData
        name: user
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: updates user
      tags:
      - users
    post:
      description: returns user with given id
      parameters:
      - description: id of user
        in: path
        name: id
        required: true
        type: integer
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: returns user
      tags:
      - users
swagger: "2.0"
